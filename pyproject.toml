[project]
name = "mhd-ws"
version = "0.0.1"
description = "Metabolomics Hub WebServices"
authors = [{"name" = "MetaboLights Team", "email" =  "metabolights-dev@ebi.ac.uk"}]
license = "Apache-2.0"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiocache>=0.12.3",
    "alembic>=1.16.2",
    "asgi-correlation-id>=4.3.4",
    "asyncpg>=0.30.0",
    "bioregistry>=0.12.19",
    "celery>=5.5.3",
    "cryptography>=45.0.4",
    "dependency-injector>=4.48.1",
    "email-validator>=2.2.0",
    "flower>=2.0.1",
    "ftputil>=5.1.0",
    "gunicorn>=23.0.0",
    "httpx>=0.28.1",
    "jinja2>=3.1.6",
    "jsonpath-ng>=1.7.0",
    "mhd-model>=0.0.13",
    "psycopg2-binary>=2.9.10",
    "pydantic>=2.11.7",
    "pyjwt>=2.10.1",
    "python-dateutil>=2.9.0.post0",
    "python-multipart>=0.0.20",
    "pytz>=2025.2",
    "pyyaml>=6.0.2",
    "reachable>=0.7.0",
    "redis>=6.2.0",
    "sqlalchemy>=2.0.41",
    "ujson>=5.10.0",
    "uvicorn>=0.34.3",
    "uvloop>=0.21.0",
]


[dependency-groups]
dev = [
    "commitizen>=4.8.3",
    "import-linter>=2.3",
    "mkdocs-material>=9.5.49",
    "pre-commit>=4.2.0",
    "ruff>=0.12.0",
    "sqlacodegen>=3.0.0",
]
test = [
    "aiosqlite>=0.21.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
]


[tool.commitizen]
name = "cz_conventional_commits"
version_provider = "uv"
version = "0.0.13"
tag_format = "v$major.$minor.$patch"
version_files = [
    "pyproject.toml:version",
    "mhd_ws/__init__.py:__version__",
    "docs/index.md",
]
bump_message = "bump: version $current_version -> $new_version"
update_changelog_on_bump = true

[tool.pytest.ini_options]
addopts = "-ra -q -v"
testpaths = [
    "tests"
]


[tool.ruff.lint]
extend-select = ["E4", "E7", "E9", "F", "I", "G", "SLF", "PTH", "Q", "T"]
ignore = [ "ANN401"]

fixable = ["ALL"]


[tool.coverage.run]
omit = [
  ".*",
  "*/tests/*",
  "*/site-packages/*",
  "*/docs/*",
  "*/site/*",
  "*/dist/*",
  ".*/*",
  "dist*/",
  "validation*/",
  "scripts*/",
]

[tool.importlinter]
include_external_packages = true
root_packages = ["mhd_ws"]

[[tool.importlinter.contracts]]
name = "Architecture Layer Dependencies"
type = "layers"
layers = [
    "mhd_ws.run",
    "mhd_ws.infrastructure | mhd_ws.presentation",
    "mhd_ws.application",
    "mhd_ws.domain"
]
